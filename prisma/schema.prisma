// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// model Example {
//   id        String   @id @default(cuid())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

model User {
  userId String @id

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  created Recipe[] @relation("createdRecipe")

  favorites Recipe[]
}

model Recipe {
  id       String @id @default(cuid())
  name     String @db.VarChar(50)
  authorId String
  author   User   @relation("createdRecipe", fields: [authorId], references: [userId])

  favoriteBy User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  imageUrl         String?
  cookingTime      Int
  servingSize      Int
  categories       Category[]
  ingredients      Ingredient[]
  preparationSteps PreparationStep[]
  notes            Note[]

  @@index([authorId])
}

model Category {
  id      String   @id @default(cuid())
  name    String   @unique
  recipes Recipe[]
}

model Ingredient {
  id                String  @id @default(cuid())
  name              String
  quantity          Float?
  unit              String?
  quantitySecondary Float?
  unitSecondary     String?
  recipeId          String
  recipe            Recipe  @relation(fields: [recipeId], references: [id])

  @@index([recipeId])
}

model PreparationStep {
  id       String @id @default(cuid())
  stepNum  Int
  name     String
  recipeId String
  recipe   Recipe @relation(fields: [recipeId], references: [id])

  @@index([recipeId])
}

model Note {
  id       String @id @default(cuid())
  name     String
  recipeId String
  recipe   Recipe @relation(fields: [recipeId], references: [id])

  @@index([recipeId])
}
